// Generated by view binder compiler. Do not edit!
package com.akshay.harsoda.android.base.helper.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.akshay.harsoda.android.base.helper.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NativeAdBannerTypeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout clStar;

  @NonNull
  public final CardView cvAppIcon;

  @NonNull
  public final TextView nativeAdAdvertiser;

  @NonNull
  public final ImageView nativeAdAppIcon;

  @NonNull
  public final TextView nativeAdBody;

  @NonNull
  public final AppCompatButton nativeAdCallToAction;

  @NonNull
  public final LinearLayout nativeAdChoicesContainer;

  @NonNull
  public final TextView nativeAdHeadline;

  @NonNull
  public final FrameLayout nativeAdImageArea;

  @NonNull
  public final RatingBar nativeAdStars;

  @NonNull
  public final View testIconView;

  @NonNull
  public final TextView txtAdAttribution;

  private NativeAdBannerTypeBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout clStar, @NonNull CardView cvAppIcon,
      @NonNull TextView nativeAdAdvertiser, @NonNull ImageView nativeAdAppIcon,
      @NonNull TextView nativeAdBody, @NonNull AppCompatButton nativeAdCallToAction,
      @NonNull LinearLayout nativeAdChoicesContainer, @NonNull TextView nativeAdHeadline,
      @NonNull FrameLayout nativeAdImageArea, @NonNull RatingBar nativeAdStars,
      @NonNull View testIconView, @NonNull TextView txtAdAttribution) {
    this.rootView = rootView;
    this.clStar = clStar;
    this.cvAppIcon = cvAppIcon;
    this.nativeAdAdvertiser = nativeAdAdvertiser;
    this.nativeAdAppIcon = nativeAdAppIcon;
    this.nativeAdBody = nativeAdBody;
    this.nativeAdCallToAction = nativeAdCallToAction;
    this.nativeAdChoicesContainer = nativeAdChoicesContainer;
    this.nativeAdHeadline = nativeAdHeadline;
    this.nativeAdImageArea = nativeAdImageArea;
    this.nativeAdStars = nativeAdStars;
    this.testIconView = testIconView;
    this.txtAdAttribution = txtAdAttribution;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NativeAdBannerTypeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NativeAdBannerTypeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.native_ad_banner_type, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NativeAdBannerTypeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cl_star;
      ConstraintLayout clStar = ViewBindings.findChildViewById(rootView, id);
      if (clStar == null) {
        break missingId;
      }

      id = R.id.cv_app_icon;
      CardView cvAppIcon = ViewBindings.findChildViewById(rootView, id);
      if (cvAppIcon == null) {
        break missingId;
      }

      id = R.id.native_ad_advertiser;
      TextView nativeAdAdvertiser = ViewBindings.findChildViewById(rootView, id);
      if (nativeAdAdvertiser == null) {
        break missingId;
      }

      id = R.id.native_ad_app_icon;
      ImageView nativeAdAppIcon = ViewBindings.findChildViewById(rootView, id);
      if (nativeAdAppIcon == null) {
        break missingId;
      }

      id = R.id.native_ad_body;
      TextView nativeAdBody = ViewBindings.findChildViewById(rootView, id);
      if (nativeAdBody == null) {
        break missingId;
      }

      id = R.id.native_ad_call_to_action;
      AppCompatButton nativeAdCallToAction = ViewBindings.findChildViewById(rootView, id);
      if (nativeAdCallToAction == null) {
        break missingId;
      }

      id = R.id.native_ad_choices_container;
      LinearLayout nativeAdChoicesContainer = ViewBindings.findChildViewById(rootView, id);
      if (nativeAdChoicesContainer == null) {
        break missingId;
      }

      id = R.id.native_ad_headline;
      TextView nativeAdHeadline = ViewBindings.findChildViewById(rootView, id);
      if (nativeAdHeadline == null) {
        break missingId;
      }

      id = R.id.native_ad_image_area;
      FrameLayout nativeAdImageArea = ViewBindings.findChildViewById(rootView, id);
      if (nativeAdImageArea == null) {
        break missingId;
      }

      id = R.id.native_ad_stars;
      RatingBar nativeAdStars = ViewBindings.findChildViewById(rootView, id);
      if (nativeAdStars == null) {
        break missingId;
      }

      id = R.id.test_icon_view;
      View testIconView = ViewBindings.findChildViewById(rootView, id);
      if (testIconView == null) {
        break missingId;
      }

      id = R.id.txt_ad_attribution;
      TextView txtAdAttribution = ViewBindings.findChildViewById(rootView, id);
      if (txtAdAttribution == null) {
        break missingId;
      }

      return new NativeAdBannerTypeBinding((ConstraintLayout) rootView, clStar, cvAppIcon,
          nativeAdAdvertiser, nativeAdAppIcon, nativeAdBody, nativeAdCallToAction,
          nativeAdChoicesContainer, nativeAdHeadline, nativeAdImageArea, nativeAdStars,
          testIconView, txtAdAttribution);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
